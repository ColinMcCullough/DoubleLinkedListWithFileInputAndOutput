#BlueJ class context
comment0.target=DoubleLinkedList
comment0.text=\r\n\ Write\ a\ description\ of\ interface\ DoubleLinkedList\ here.\r\n\r\n\ @author\ (your\ name)\r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment10.params=
comment10.target=void\ deleteLast()
comment10.text=\r\ndeletes\ last\ element\ of\ data\ in\ the\ list\r\n@return\ void\r\n
comment11.params=
comment11.target=int\ getSize()
comment11.text=\r\ngets\ the\ size\ of\ the\ current\ list\r\n@return\ int\r\n
comment12.params=
comment12.target=void\ clear()
comment12.text=\r\nremoves\ all\ elements\ from\ the\ list\r\n@return\ void\r\n
comment13.params=data
comment13.target=boolean\ contains(java.lang.Object)
comment13.text=\r\n\ Compares\ data\ passed\ into\ paramater\ against\ each\ element\ of\ data\ in\ the\ list\r\n\ @return\ boolean\ true\ if\ it\ contains\ data,\ false\ if\ not\r\n
comment14.params=index
comment14.target=java.lang.Object\ get(int)
comment14.text=\r\n\ Gets\ element\ at\ specified\ index\ \r\n\ @param\ int\ index\r\n\ @return\ element\ at\ specified\ index\r\n
comment15.params=index
comment15.target=DoubleLinkedList.Node\ getNode(int)
comment15.text=\r\n\ Gets\ Node\ at\ specified\ index\ \r\n\ @param\ int\ index\r\n\ @return\ Node<E>\ at\ specified\ index\r\n
comment16.params=
comment16.target=java.lang.Object\ getFirst()
comment16.text=\r\n\ Gets\ data\ at\ index\ position\ 0\r\n\ @return\ Element\ at\ first\ index\ position\r\n
comment17.params=
comment17.target=java.lang.Object\ getLast()
comment17.text=\r\n\ Gets\ data\ at\ last\ index\ position\r\n\ @return\ Element\ at\ last\ index\ position\r\n
comment18.params=
comment18.target=java.util.Iterator\ iterator()
comment2.params=filename\ list
comment2.target=boolean\ writeToFile(java.lang.String,\ DoubleLinkedList)
comment2.text=\r\n\ Writes\ a\ DoubleLinkedList\ of\ Elements\ out\ to\ a\ filename\r\n\ @param\ String\ filename\r\n\ @param\ DoubleLinkedList<E>\r\n\ @return\ true\ if\ successful,\ false\ otherwise.\r\n
comment3.params=file
comment3.target=DoubleLinkedList\ readFromFile(java.lang.String)
comment3.text=\r\n\ Reades\ a\ file\ passed\ into\ the\ paramater\ and\ returns\ a\ DoubleLinkedList\r\n\ where\ each\ element\ represents\ a\ line\ from\ the\ File\r\n\ @param\ String\ filename\r\n\ @return\ DoubleLinkedList<Integer>\r\n
comment4.params=
comment4.target=DoubleLinkedList()
comment5.params=index\ data
comment5.target=void\ add(int,\ java.lang.Object)
comment5.text=\r\n\ Adds\ an\ Element\ of\ Data\ at\ a\ specific\ index\r\n\ @param\ int\ index\r\n\ @param\ E\ data\r\n\ @return\ void\r\n
comment6.params=data
comment6.target=void\ addFirst(java.lang.Object)
comment6.text=\r\nadds\ element\ of\ data\ to\ the\ first\ index\ of\ the\ list\r\n@param\ Element\ of\ data\r\n@return\ void\r\n
comment7.params=data
comment7.target=void\ addLast(java.lang.Object)
comment7.text=\r\nadds\ element\ of\ data\ to\ the\ last\ index\ of\ the\ list\r\n@param\ Element\ of\ data\r\n@return\ void\r\n
comment8.params=index
comment8.target=void\ delete(int)
comment8.text=\r\nremoves\ element\ of\ data\ from\ the\ index\ specified\ in\ the\ param\r\n@param\ index\ posiition\ for\ delection\r\n@return\ void\r\n
comment9.params=
comment9.target=void\ deleteFirst()
comment9.text=\r\ndeletes\ first\ element\ of\ data\ in\ the\ list\r\n@return\ void\r\n
numComments=19
